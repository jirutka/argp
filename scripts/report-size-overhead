#!/bin/sh
set -eu

OUT_DIR='target/release/examples'
HOST_OS="$(uname -s)"

cd "$(dirname "$0")/.."

file_size() {
	case "$HOST_OS" in
		Darwin) stat -f '%z' "$@";;
		*) stat -c '%s' "$@";;
	esac
}

diff_kb() {
	echo "$(( ( $1 - $2 ) / 1024 ))"
}

cargo_build_opts() {
	local var val
	while [ $# -ne 0 ]; do
		var="$(echo "${1%%=*}" | tr 'a-z-' 'A-Z_')"
		val="${1#*=}"
		eval "export CARGO_PROFILE_RELEASE_$var=$val"
		shift
	done
}

build_and_report() (
	export CARGO_BUILD_RUSTFLAGS="-C strip=symbols"
	export CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1

	cargo_build_opts "$@"

	echo "Building with $@"

	cargo build --release --example argparse_rosetta_null
	size0=$(file_size "$OUT_DIR/argparse_rosetta_null")
	rm "$OUT_DIR/argparse_rosetta_null"

	cargo build --release --example argparse_rosetta_argp
	size1=$(file_size "$OUT_DIR/argparse_rosetta_argp")
	rm "$OUT_DIR/argparse_rosetta_argp"

	cargo build --release --example subcommands
	size2=$(file_size "$OUT_DIR/subcommands")
	rm "$OUT_DIR/subcommands"

	echo "| $(diff_kb $size0 0) kiB  | +$(diff_kb $size1 $size0) kiB | +$(diff_kb $size2 $size0) kiB     | $*" >> "$REPORT_OUT"
)

REPORT_OUT="$(mktemp)"

cat > "$REPORT_OUT" <<EOF
argp size overhead:

| baseline | rosetta | subcommands | build options
|----------|---------|-------------|--------------
EOF

build_and_report opt-level=2
build_and_report opt-level=2 panic=abort
build_and_report opt-level=2 lto=fat
build_and_report opt-level=2 lto=fat panic=abort
build_and_report opt-level=s panic=abort
build_and_report opt-level=s lto=fat
build_and_report opt-level=s lto=fat panic=abort

echo ''
cat "$REPORT_OUT"
rm -f "$REPORT_OUT"
